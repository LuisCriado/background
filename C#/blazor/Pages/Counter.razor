@page "/counter/{currentCountParameter?}"
@inject ILogger<Counter> logger;

<PageTitle>Counter</PageTitle>


<ModuleTitle Title="Counter" /> 

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    [Parameter]
    public string? currentCountParameter{get;set;}

    [SupplyParameterFromQuery]
    [Parameter]
    public string? CounterFromQuery{get;set;}


    public override async Task SetParametersAsync(ParameterView parameter)
    {
        if(parameter.TryGetValue<string>(nameof(currentCountParameter),out var value))
            {
                if(value is not null)
                {
                    currentCountParameter = value;
                }
            }


        await base.SetParametersAsync(parameter);
    }

    protected override void OnParametersSet()
    {
        logger.LogInformation("se envian los parametros");
    }
    protected override void OnInitialized()
    {
        //currentCount = currentCountParameter!= null ?  int.Parse(currentCountParameter) : 0;

        currentCount = CounterFromQuery!= null ?  int.Parse(CounterFromQuery) : 0;
        logger.LogInformation("se inicia el componente");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        logger.LogInformation("esto ocurre despues de iniciar el componente");
    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
